-- Health check —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ë–î
-- –í–ù–ò–ú–ê–ù–ò–ï: –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ö–µ–º—ã Prisma –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–±–Ω–æ–≤–∏—Ç—å —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç!

-- –°–ø–∏—Å–æ–∫ –æ–∂–∏–¥–∞–µ–º—ã—Ö —Ç–∞–±–ª–∏—Ü (—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å schema.prisma –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö!)
-- Current models: User, Equipment, Model, Department, Classification, 
--                  Measurement, EquipmentType, EquipmentKind, FavoriteEquipment, OperatingEquipment, EquipmentSearchHistory
-- Total expected: 11 —Ç–∞–±–ª–∏—Ü

\echo 'üîç Database Health Check'
\echo '========================================'

-- 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü (–¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π Prisma)
\echo ''
\echo '1Ô∏è‚É£ Required Tables:'
WITH expected_tables AS (
  SELECT unnest(ARRAY[
    'User', 'Equipment', 'Model', 'Department', 'Classification',
    'Measurement', 'EquipmentType', 'EquipmentKind',
    'FavoriteEquipment', 'OperatingEquipment', 'EquipmentSearchHistory'
  ]) as table_name
)
SELECT 
    COUNT(CASE WHEN t.table_name IS NOT NULL THEN 1 END) as found,
    COUNT(*) as expected,
    CASE 
        WHEN COUNT(CASE WHEN t.table_name IS NOT NULL THEN 1 END) = COUNT(*) THEN 
            '‚úÖ –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç (' || COUNT(*) || ')'
        ELSE 
            '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ç–∞–±–ª–∏—Ü—ã: ' || 
            (COUNT(*) - COUNT(CASE WHEN t.table_name IS NOT NULL THEN 1 END)) ||
            ' –∏–∑ ' || COUNT(*) ||
            '. –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç: ' ||
            string_agg(CASE WHEN t.table_name IS NULL THEN expected.table_name END, ', ')
    END as status
FROM expected_tables expected
LEFT JOIN information_schema.tables t ON t.table_schema = 'public' 
  AND lower(t.table_name) = lower(expected.table_name);

-- 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∫–æ–ª–æ–Ω–æ–∫ –≤ Equipment
\echo ''
\echo '2Ô∏è‚É£ Equipment Table Columns:'
SELECT 
    CASE 
        WHEN COUNT(*) = 4 THEN '‚úÖ –í—Å–µ FK –∫–æ–ª–æ–Ω–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç'
        ELSE '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–æ–ª–æ–Ω–∫–∏: ' || (4 - COUNT(*)) || ' –∏–∑ 4'
    END as status,
    COALESCE(string_agg(column_name, ', '), '–ù–µ—Ç –∫–æ–ª–æ–Ω–æ–∫') as missing_columns
FROM (
    SELECT column_name 
    FROM information_schema.columns 
    WHERE table_name = 'Equipment' 
      AND column_name IN ('classificationId', 'kindId', 'measurementId', 'typeId')
) as existing;

-- 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π
\echo ''
\echo '3Ô∏è‚É£ Prisma Migrations (last 5):'
SELECT 
    migration_name,
    CASE 
        WHEN finished_at IS NOT NULL THEN '‚úÖ –ü—Ä–∏–º–µ–Ω–µ–Ω–∞'
        ELSE '‚ùå –ù–ï –ø—Ä–∏–º–µ–Ω–µ–Ω–∞'
    END as status
FROM _prisma_migrations 
ORDER BY started_at DESC 
LIMIT 5;

-- 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è pg_trgm
\echo ''
\echo '4Ô∏è‚É£ PostgreSQL Extensions:'
SELECT 
    extname,
    CASE 
        WHEN installed_version IS NOT NULL THEN '‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ'
        ELSE '‚ùå –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ'
    END as status
FROM pg_extension 
WHERE extname = 'pg_trgm';

-- 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–∏–≥—Ä–∞–º–º–Ω—ã—Ö –∏–Ω–¥–µ–∫—Å–æ–≤ (–¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è)
-- –°–ø–∏—Å–æ–∫ –∏–Ω–¥–µ–∫—Å–æ–≤ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å apply_search_indexes.sql –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö!
\echo ''
\echo '5Ô∏è‚É£ Trigrams Indexes:'
DO $$
DECLARE
    trgm_count INTEGER;
    expected_count INTEGER := 12; -- UPDATE –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ apply_search_indexes.sql!
BEGIN
    SELECT COUNT(*) INTO trgm_count
    FROM pg_indexes 
    WHERE schemaname = 'public'
      AND indexname LIKE '%_trgm%';
    
    IF trgm_count = expected_count THEN
        RAISE NOTICE '‚úÖ –í—Å–µ % —Ç—Ä–∏–≥—Ä–∞–º–º–Ω—ã—Ö –∏–Ω–¥–µ–∫—Å–æ–≤ –Ω–∞ –º–µ—Å—Ç–µ (%)', expected_count, trgm_count;
    ELSIF trgm_count < expected_count THEN
        RAISE NOTICE '‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∏–Ω–¥–µ–∫—Å—ã: %/%', trgm_count, expected_count;
    ELSE
        RAISE NOTICE '‚ö†Ô∏è –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: % (–æ–∂–∏–¥–∞–ª–æ—Å—å %)', trgm_count, expected_count;
    END IF;
END $$;

-- 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ B-tree –∏–Ω–¥–µ–∫—Å–æ–≤ –≤ Equipment (–¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è)
\echo ''
\echo '6Ô∏è‚É£ B-tree Indexes in Equipment:'
SELECT 
    COUNT(*) as total_indexes,
    CASE 
        WHEN COUNT(*) >= 15 THEN '‚úÖ –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–Ω–¥–µ–∫—Å–æ–≤'
        ELSE '‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–Ω–¥–µ–∫—Å–æ–≤ (' || COUNT(*) || ')'
    END as status
FROM pg_indexes 
WHERE schemaname = 'public'
  AND tablename = 'Equipment'
  AND indexname NOT LIKE '%_trgm%'
  AND indexname NOT LIKE '%_pkey%'; -- –ò—Å–∫–ª—é—á–∞–µ–º primary key

\echo ''
\echo '========================================'
\echo 'Health Check Complete'
\echo ''
\echo '‚ö†Ô∏è –í–ê–ñ–ù–û: –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ö–µ–º—ã Prisma –∏–ª–∏ apply_search_indexes.sql'
\echo '   –æ–±–Ω–æ–≤–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç (—Å—Ç—Ä–æ–∫–∏ —Å –º–µ—Ç–∫–∞–º–∏ UPDATE)!'
