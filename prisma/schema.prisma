datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  login                     String  @id
  password                  String
  firstName                 String?
  lastName                  String?
  patronymic                String?
  position                  String?
  department                String?
  category                  String?
  role                      String
  studentsEducationYear     String?
  postGraduateEducationYear String?

  favoriteEquipments     FavoriteEquipment[]
  operatingEquipment     OperatingEquipment[]
  equipmentSearchHistory EquipmentSearchHistory[]

  @@index([role])
  @@index([department])
  @@index([position])
  @@index([category])
}

model Equipment {
  id                 String               @id
  serialNumber       String?
  inventoryNumber    String?
  name               String?
  description        String?
  brand              String?
  model              Model                @relation(fields: [modelId], references: [id])
  modelId            Int
  category           String?
  filesUrl           String?
  imgUrl             String?
  classification     Classification?      @relation(fields: [classificationId], references: [id])
  classificationId   Int?
  measurements       Measurement?         @relation(fields: [measurementId], references: [id])
  measurementId      Int?
  department         Department           @relation(fields: [departmentId], references: [id])
  departmentId       Int
  type               EquipmentType?       @relation(fields: [typeId], references: [id])
  typeId             Int?
  kind               EquipmentKind?       @relation(fields: [kindId], references: [id])
  kindId             Int?
  favoriteEquipment  FavoriteEquipment[]
  operatingEquipment OperatingEquipment[]
  sameList           String[]             @default([])

  // Базовые индексы для поиска
  @@index([serialNumber])
  @@index([inventoryNumber])
  @@index([name])
  @@index([description])
  @@index([brand])
  @@index([category])
  
  // Индексы для внешних ключей
  @@index([modelId])
  @@index([departmentId])
  @@index([classificationId])
  @@index([measurementId])
  @@index([typeId])
  @@index([kindId])
  
  // Составные индексы для частых запросов
  @@index([modelId, departmentId])
  @@index([category, departmentId])
}

model Model {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  equipment Equipment[]
}

model Department {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  equipment Equipment[]
}

model Classification {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  equipment Equipment[]
}

model Measurement {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  equipment Equipment[]
}

model EquipmentType {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  equipment Equipment[]
}

model EquipmentKind {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  equipment Equipment[]
}

model FavoriteEquipment {
  login       String
  equipmentId String

  user      User      @relation(fields: [login], references: [login], onDelete: Cascade)
  equipment Equipment @relation(fields: [equipmentId], references: [id], onDelete: Cascade)

  @@unique([login, equipmentId])
  
  // Для поиска избранного по пользователю
  @@index([login])
  @@index([equipmentId])
}

model OperatingEquipment {
  equipmentId   String
  login         String
  isLongUse     Boolean
  startDateTime DateTime @default(now())

  user      User      @relation(fields: [login], references: [login], onDelete: Cascade)
  equipment Equipment @relation(fields: [equipmentId], references: [id], onDelete: Cascade)

  @@unique([login, equipmentId])
  
  // Для поиска операций по дате и пользователю
  @@index([login])
  @@index([equipmentId])
  @@index([startDateTime])
  @@index([isLongUse])
  @@index([login, startDateTime])
}

model EquipmentSearchHistory {
  login String
  term  String

  user User @relation(fields: [login], references: [login], onDelete: Cascade)

  @@unique([login, term])
  
  // Для анализа популярных поисковых запросов
  @@index([term])
  @@index([login])
  @@index([term, login])
}