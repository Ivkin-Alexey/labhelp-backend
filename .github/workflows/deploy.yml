name: backend-deploy

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Deploy using ssh
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: 22
        script: |
          set -e  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
          
          cd /home/git/labhelp-backend
          
          echo "üì• –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è..."
          git pull origin main
          
          echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
          npm install
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
          echo "üîó –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö..."
          npx prisma db execute --stdin <<< "SELECT 1;" || {
            echo "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
            exit 1
          }
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ –ë–î
          echo "üè• –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
          npx prisma db execute --file scripts/verify_db_health.sql || {
            echo "‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –∑–¥–æ—Ä–æ–≤—å—è –ë–î, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º..."
          }
          
          # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –º–∏–≥—Ä–∞—Ü–∏–π
          echo "üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –º–∏–≥—Ä–∞—Ü–∏–π..."
          FAILED_MIGRATIONS=$(npx prisma migrate status 2>&1 | grep "failed" || true)
          if [ ! -z "$FAILED_MIGRATIONS" ]; then
            echo "‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏, –∏—Å–ø—Ä–∞–≤–ª—è–µ–º..."
            npx prisma db execute --file scripts/fix-failed-migration.sql || true
            npx prisma migrate resolve --applied 20250115000000_add_search_indexes || true
            echo "‚úÖ –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã"
          fi
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –º–∏–≥—Ä–∞—Ü–∏–π
          echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π..."
          MIGRATION_STATUS=$(npx prisma migrate status 2>&1 || true)
          echo "$MIGRATION_STATUS"
          
          # –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
          if echo "$MIGRATION_STATUS" | grep -q "Database schema is up to date"; then
            echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∞–∫—Ç—É–∞–ª—å–Ω–∞, –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è"
          else
            echo "üì¶ –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
            npx prisma migrate deploy || {
              echo "‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π, –ø—ã—Ç–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å..."
              # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—É—é –º–∏–≥—Ä–∞—Ü–∏—é –ø–æ–∏—Å–∫–∞ –∏–Ω–¥–µ–∫—Å–æ–≤
              npx prisma migrate resolve --applied 20250115000000_add_search_indexes || true
              npx prisma migrate resolve --applied 20250913150808_add_filter_tables || true
              npx prisma migrate deploy
            }
            echo "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
          fi
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –ø—Ä–∏–º–µ–Ω—è–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø–æ–∏—Å–∫–∞ (—Ç—Ä–∏–≥—Ä–∞–º–º—ã)
          echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç—Ä–∏–≥—Ä–∞–º–º–Ω—ã—Ö –∏–Ω–¥–µ–∫—Å–æ–≤..."
          TRGM_COUNT=$(npx prisma db execute --stdin <<< "SELECT COUNT(*) as count FROM pg_indexes WHERE schemaname = 'public' AND indexname LIKE '%_trgm%';" 2>/dev/null | grep -A 1 "count" | tail -1 | grep -oE '[0-9]+' || echo "0")
          echo "–ù–∞–π–¥–µ–Ω–æ —Ç—Ä–∏–≥—Ä–∞–º–º–Ω—ã—Ö –∏–Ω–¥–µ–∫—Å–æ–≤: $TRGM_COUNT"
          
          if [ "$TRGM_COUNT" -lt "12" ]; then
            echo "üì¶ –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç—Ä–∏–≥—Ä–∞–º–º–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ ILIKE –ø–æ–∏—Å–∫–∞ (—Å–µ–π—á–∞—Å: $TRGM_COUNT, –æ–∂–∏–¥–∞–µ—Ç—Å—è: 12)..."
            
            # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏–Ω–¥–µ–∫—Å—ã —á–µ—Ä–µ–∑ JS —Å–∫—Ä–∏–ø—Ç (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç—É –∂–µ –ª–æ–≥–∏–∫—É —á—Ç–æ –∏ seed)
            echo "üì¶ –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç—Ä–∏–≥—Ä–∞–º–º–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã —á–µ—Ä–µ–∑ JS —Å–∫—Ä–∏–ø—Ç..."
            if node scripts/create-indexes.js; then
              echo "‚úÖ JS —Å–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ"
            else
              JS_EXIT_CODE=$?
              echo "‚ö†Ô∏è JS —Å–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –∫–æ–¥–æ–º $JS_EXIT_CODE"
              echo "‚ö†Ô∏è –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± —á–µ—Ä–µ–∑ SQL..."
              
              # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º/—Å–æ–∑–¥–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
              echo "üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ pg_trgm..."
              npx prisma db execute --stdin <<< "CREATE EXTENSION IF NOT EXISTS pg_trgm;" 2>&1 || {
                echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ pg_trgm (–≤–æ–∑–º–æ–∂–Ω–æ, —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–∞–≤–∞ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)"
              }
              
              # –ü—Ä–∏–º–µ–Ω—è–µ–º SQL —Å–∫—Ä–∏–ø—Ç –∫–∞–∫ fallback
              if [ -f scripts/apply_search_indexes.sql ]; then
                npx prisma db execute --file scripts/apply_search_indexes.sql 2>&1 || {
                  echo "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ SQL —Å–∫—Ä–∏–ø—Ç–∞ –∏–Ω–¥–µ–∫—Å–æ–≤"
                }
              else
                echo "‚ö†Ô∏è –§–∞–π–ª scripts/apply_search_indexes.sql –Ω–µ –Ω–∞–π–¥–µ–Ω"
              fi
            fi
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            TRGM_COUNT_AFTER=$(npx prisma db execute --stdin <<< "SELECT COUNT(*) as count FROM pg_indexes WHERE schemaname = 'public' AND indexname LIKE '%_trgm%';" 2>/dev/null | grep -A 1 "count" | tail -1 | grep -oE '[0-9]+' || echo "0")
            echo "‚úÖ –¢—Ä–∏–≥—Ä–∞–º–º–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã –ø—Ä–∏–º–µ–Ω–µ–Ω—ã (—Ç–µ–ø–µ—Ä—å: $TRGM_COUNT_AFTER)"
          else
            echo "‚úÖ –¢—Ä–∏–≥—Ä–∞–º–º–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç ($TRGM_COUNT —à—Ç.)"
          fi
          
          # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ë–î –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è
          echo "üîç –í—ã–ø–æ–ª–Ω—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ë–î..."
          npx prisma db execute --file scripts/verify_db_health.sql || {
            echo "‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –ë–î, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º..."
          }
          
          # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç Prisma
          echo "üîÑ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç Prisma..."
          npx prisma generate
          echo "‚úÖ –ö–ª–∏–µ–Ω—Ç Prisma —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω"
          
          # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
          echo "üöÄ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ..."
          pm2 restart index
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
          echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
          pm2 status
          
          echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"